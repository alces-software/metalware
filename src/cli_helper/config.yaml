anchor_options:
  group_option: &group_option
    tags: [-g, --group]
    type: String
    description: >
          Switch NODE_IDENTIFIER to specify a gender group rather than a single
          node

global_options:
  - tags: [-c FILE, --config FILE]
    description: >
      Specify config file to use instead of default
      (/opt/metalware/etc/config.yaml)
  - tags: [--strict]
    description: >
      Convert warnings to errors
  - tags: [--quiet]
    description: >
      Suppress any warnings from being displayed

subcommands:
  configure_domain: &configure_domain
    syntax: metal configure domain [options]
    summary: Configure Metalware domain
    description: >
      Asks a sequence of questions defined in the current repository to
      configure the domain for this Metalware installation. The configuration
      answers will then be used when rendering templates.
    action: Commands::Configure::Domain

  configure_group: &configure_group
    syntax: metal configure group GROUP_NAME [options]
    summary: Configure a Metalware group
    description: >
      Asks a sequence of questions defined in the current repository to
      configure a group for this Metalware installation. The configuration
      answers will then be used when rendering templates.
    action: Commands::Configure::Group

  configure_node: &configure_node
    syntax: metal configure node NODE_NAME [options]
    summary: Configure a Metalware node
    description: >
      Asks a sequence of questions defined in the current repository to
      configure a node for this Metalware installation. The configuration
      answers will then be used when rendering templates.
    action: Commands::Configure::Node

  configure_rerender: &configure_rerender
    syntax: metal configure rerender [options]
    summary: Re-render the Metalware domain templates
    description: >
      Re-render the Metalware domain templates, in particular the genders and
      hosts file templates. This is useful after manually editing files
      involved in rendering these templates, such as answer files or the
      templates themselves.
    action: Commands::Configure::Rerender

  repo_use: &repo_use
    syntax: metal repo use REPO_URL [options]
    summary: Clone a new template git repo
    description: >
      Clones a new git repo from a URL. The repo should contain the default
      templates used by the other commands. It may also include a config
      directory containing template parameter YAML files.
    action:
      Commands::Repo::Use
    options:
      - tags: [-f, --force]
        description: >
          Force use of a new repo even if local changes have been made to the
          current repo

  repo_update: &repo_update
    syntax: metal repo update [options]
    summary: Updates the git repository
    description: >
      Updates the local git repository to match the remote. The update command
      does not support local changes. The force will trigger a hard reset and
      will delete local changes. All other git commands can be preformed
      manually on the repo.
    action: Commands::Repo::Update
    options:
      - tags: [-f, --force]
        description: >
          Force update even if local changes have been made to the repo

  view-answers_domain: &view-answers_domain
    syntax: metal view-answers domain [options]
    summary: View configured answers for the overall domain
    description: >
      View configuration questions along with configured answers for the
      overall Metalware domain
    action:
      Commands::ViewAnswers::Domain

  view-answers_group: &view-answers_group
    syntax: metal view-answers group GROUP_NAME [options]
    summary: View configured answers for a group
    description: >
      View configuration questions along with configured answers for given
      group and the overall Metalware domain
    action:
      Commands::ViewAnswers::Group

  view-answers_node: &view-answers_node
    syntax: metal view-answers node NODE_NAME [options]
    summary: View configured answers for a node
    description: >
      View configuration questions along with configured answers for given
      node, its primary group, and the overall Metalware domain
    action:
      Commands::ViewAnswers::Node

commands:
  build:
    syntax: metal build NODE_IDENTIFIER [options]
    summary: Renders the templates used to build the nodes
    description: >
      Build is used to rendered template files before waiting for the compute
      nodes to pxe-boot and build. Build by default will render the pxelinux and
      kickstart templates. In additional, build renders the "files" list in
      [config].yaml for the gender group and node.


      Build will then wait for the nodes to build. Once a node has finished
      building, it needs to curl "alces.build_complete_url" which notifies build
      that the node is complete. This will trigger the pxelinux file to be
      re-rendered with "firstboot" set to false. Build will exit once all the
      nodes have finished building.
    action: Commands::Build
    options:
      - *group_option
      - tags: [-k KICKSTART_TEMPLATE, --kickstart KICKSTART_TEMPLATE]
        type: String
        default: default
        description: >
          Specify kickstart template to use
      - tags: [-p PXELINUX_TEMPLATE, --pxelinux PXELINUX_TEMPLATE]
        type: String
        default: default
        description: >
          Specify pxelinux template to use

  configure:
    syntax: metal configure [options]
    summary: Configure different aspects of this Metalware installation
    subcommands:
      domain: *configure_domain
      group: *configure_group
      node: *configure_node
      rerender: *configure_rerender

  console:
    syntax: metal console NODE_IDENTIFIER [options]
    summary: Volatile. Display a node's console in the terminal
    description: >
      Displays the console of a node in the terminal. The console command
      operates over the BMC network and can be used as node is booting.
    action: CommandHelpers::BashCommand

  dhcp:
    syntax: metal dhcp [options]
    summary: Renders and reboots dhcp from the hunter cache
    description: >
      Dhcp renders a template which is used to update the dhcp server. Dhcp is
      designed  to run after hunter and read from its cache. Hunter cache can be
      iterated over in the template with "alces.hunter.each". The rendered dhcp
      template is validated before the dhcp server is reset.
    action: Commands::Dhcp
    options:
      - tags: [-t TEMPLATE, --template TEMPLATE]
        type: String
        default: default
        description: >
          Specify dhcp template to use

  each:
    syntax: metal each NODE_IDENTIFIER COMMAND [options]
    summary: Runs a command for a node(s)
    description: >
      Runs the COMMAND for the node/ group specified by NODE_IDENTIFIER.
      Commands that contain spaces must be quoted. The command is first rendered
      by the templater and supports erb tags.
    action: Commands::Each
    options:
      - *group_option

  hunter:
    syntax: metal hunter [options]
    summary: Detects and caches DHCP discover messages
    description: >
      Hunter is used in conjunction with the dhcp command to update
      dhcp server. Hunter listens out for dhcp discovery messages from the
      booting nodes. Hunter assigns the nodes a node name based of PREFIX or
      user input. The node's name and MAC address is then cached.


      Hunter will continue
      listening for nodes until it is interrupted. A single MAC address will
      only be cached once per run even if the compute node reboots. Refer to
      dhcp command to updated the dhcp server.
    action: Commands::Hunter
    options:
      - tags: [-i INTERFACE, --interface INTERFACE]
        type: String
        default:
          dynamic: build_interface
        description: >
          Local interface to hunt on; defaults to standard build interface if
          unspecified
      - tags: [-p PREFIX, --prefix PREFIX]
        type: String
        default: node
        description: >
          Root to suggest for detected node names
      - tags: [-l LENGTH, --length LENGTH]
        type: Integer
        default: 2
        description: >
          Numeric sequence length to use for suggested detected node names
      - tags: [-s START_NUMBER, --start START_NUMBER]
        type: Integer
        default: 1
        description: >
          Start integer to use for suggested detected node names
      - tags: [-d, --ignore-duplicate-macs]
        description: >
          Ignore any MAC addresses found which are already associated with a
          node name in the hunter cache

  ipmi:
    syntax: metal ipmi NODE_IDENTIFIER [options]
    summary: Volatile. Perform ipmi commands on single or multiple machines
    description: >
      ***VOLATILE***

       Perform ipmi commands on single or multiple machines
    action: CommandHelpers::BashCommand
    options:
      - tags: [-g]
        description: >
          Specifies that NODE_IDENTIFIER is the group. MUST be before
          NODE_IDENTIFIER
      - tags: [-k COMMAND]
        type: String
        description: >
          Specifies the ipmi command

  power:
    syntax: metal power NODE_IDENTIFIER [COMMAND] [options]
    summary: Volatile. Run power commands on a node.
    description: >
      Allows ipmi power commands to be ran on a node(s)


      The following commands are supported:

      on        - Turns the node on

      off       - Turns the node off

      status    - Display the power status

      locate    - Turns the node locater light on

      locateoff - Turns the node locater light off

      cycle     - Power cycle the node

      reset     - Warm reset the node
    action: CommandHelpers::BashCommand
    options:
      - *group_option

  render:
    syntax: metal render TEMPLATE [NODE] [options]
    summary: Render a given template
    description: >
      Renders the file specified by TEMPLATE and sends the output to standard
      out. The template can be rendered for a specific node using the optional
      NODE input.
    action: Commands::Render

  repo:
    syntax: metal repo [options]
    summary: Manage template and config repository
    # description can also be used for subcommands
    subcommands:
      use: *repo_use
      update: *repo_update

  status:
    syntax: metal status NODE_IDENTIFIER [options]
    summary: Display the current network status of the nodes
    description: >
      The status tool will attempt to determine the power and ping status of the
      node(s).
    action: Commands::Status
    options:
      - *group_option
      - tags: [--wait-limit WAIT_LIMIT]
        type: Integer
        default: 10
        description: >
          Sets how long (in seconds) wait for a response from the node before
          assuming an error has occurred. Minimum 1 seconds.
      - tags: [--thread-limit THREAD_LIMIT]
        type: Integer
        default: 50
        description: >
          Sets the maximum number of network operations

  view-answers:
    syntax: metal view-answers [options]
    summary: View configured answers
    subcommands:
      domain: *view-answers_domain
      group: *view-answers_group
      node: *view-answers_node

  view-config:
    syntax: metal view-config [NODE] [options]
    summary: View domain templating config, optionally in context for given node
    description: >
      View the exact standard templating config for the domain which will be
      used when rendering templates. This can optionally be the config in the
      context of a particular given node, in which case this will be the config
      used when rendering a template for that node.

      Note that templating parameters which are only sometimes available when
      rendering templates are not included, such as the 'alces.files'
      parameter, which is only available when rendering 'build' templates. Also
      note that the 'alces.groups' namespace and the nodes within the same primary
      genders group are not included by default; this can be done using the
      '--include-groups' option.
    action: Commands::ViewConfig
    options:
      - tags: [-i, --include-groups]
        description: >
          Include the 'alces.groups' namespace and nodes within the same primary
          gender group in the JSON output; this is not done by default as it can
          be very slow to gather the configuration for all nodes, and displaying
          this can also be very verbose.
      - tags: [--color-output]
        description: >
          Force the output to be coloured even if not outputting to a terminal;
          useful e.g. for piping to `less -R`.
